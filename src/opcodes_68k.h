
#ifndef OPCODES_68K_H
#define OPCODES_68K_H

#include "opcode_enter.h"
#include "opcode_dealloc.h"
#include "opcode_local_vec.h"
#include "opcode_global_vec.h"
#include "opcode_exit.h"
#include "opcode_div32.h"
#include "opcode_mul32.h"
#include "opcode_init.h"

// TODO: These instructions should be moved into the std-library
#include "opcode_syscall0.h"
#include "opcode_syscall1.h"
#include "opcode_syscall2.h"
#include "opcode_syscall3.h"
#include "opcode_max.h"
#include "opcode_memcopy.h"
#include "opcode_memscan.h"
#include "opcode_memset.h"
#include "opcode_min.h"

/*
#include "opcode_add.h"
#include "opcode_and.h"
#include "opcode_call.h"
#include "opcode_call_indirect.h"
#include "opcode_clear.h"
#include "opcode_dec.h"
#include "opcode_deref_byte.h"
#include "opcode_deref_word.h"
#include "opcode_div.h"
#include "opcode_drop.h"
#include "opcode_eq.h"
#include "opcode_greater.h"
#include "opcode_greater_eq.h"
#include "opcode_halt.h"
#include "opcode_inc.h"
#include "opcode_index_byte.h"
#include "opcode_index_word.h"
#include "opcode_inv.h"
#include "opcode_jump_back.h"
#include "opcode_jump_false.h"
#include "opcode_jump_fwd.h"
#include "opcode_jump_true.h"
#include "opcode_less.h"
#include "opcode_less_eq.h"
#include "opcode_less_eq.h"
#include "opcode_load_global.h"
#include "opcode_load_global_addr.h"
#include "opcode_load_local.h"
#include "opcode_load_local_addr.h"
#include "opcode_load_value.h"
#include "opcode_lognot.h"
#include "opcode_mod.h"
#include "opcode_mul.h"
#include "opcode_neg.h"
#include "opcode_not_eq.h"
#include "opcode_or.h"
#include "opcode_shift_left.h"
#include "opcode_shift_right.h"
#include "opcode_store_global.h"
#include "opcode_store_indirect_byte.h"
#include "opcode_store_indirect_word.h"
#include "opcode_store_local.h"
#include "opcode_sub.h"
#include "opcode_xor.h"
#include "opcode_gfx_init.h"
#include "opcode_gfx_clear.h"
#include "opcode_gfx_swap.h"
*/

#endif

